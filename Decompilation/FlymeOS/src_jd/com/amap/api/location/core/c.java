package com.amap.api.location.core;

import ahz;
import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.pm.Signature;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Build;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.telephony.TelephonyManager;
import android.util.DisplayMetrics;
import android.util.Log;
import android.view.Display;
import android.view.WindowManager;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.HashMap;
import java.util.Locale;

public class c
{
  public static String a;
  static HashMap<String, String> b = new HashMap();
  private static c c = null;
  private static String d = null;
  private static String e = "http://apilocate.amap.com/mobile/binary";
  private static String f = "http://abroad.apilocate.amap.com/mobile/binary";
  private static Context g = null;
  private static TelephonyManager h;
  private static ConnectivityManager i;
  private static String j;
  private static String k;
  private static String l;
  private static String m;
  private static String n;
  private static String o;
  
  static
  {
    a = "";
    o = "";
  }
  
  public static c a(Context paramContext)
  {
    if (c == null) {}
    try
    {
      c = new c();
      g = paramContext;
      h = (TelephonyManager)g.getSystemService("phone");
      i = (ConnectivityManager)g.getSystemService("connectivity");
      j = g.getApplicationContext().getPackageName();
      l = k();
      m = g();
      n = h();
      a = b(g);
      k = d(paramContext);
      if (ahz.a(c(paramContext))) {
        e = f;
      }
      for (;;)
      {
        return c;
        l();
        o = e.a(a);
        c(o);
      }
    }
    catch (Throwable paramContext)
    {
      for (;;)
      {
        paramContext.printStackTrace();
      }
    }
  }
  
  public static String a()
  {
    return a;
  }
  
  public static boolean a(double paramDouble1, double paramDouble2)
  {
    boolean bool = true;
    int i1 = (int)((paramDouble2 - 73.0D) / 0.5D);
    int i2 = (int)((paramDouble1 - 3.5D) / 0.5D);
    if ((i2 < 0) || (i2 >= 101) || (i1 < 0) || (i1 >= 124)) {
      bool = false;
    }
    for (;;)
    {
      return bool;
      try
      {
        icharAt(i1 + i2 * 124);
        if (i1 != 49) {
          return false;
        }
      }
      catch (Throwable localThrowable)
      {
        localThrowable.printStackTrace();
      }
    }
    return true;
  }
  
  public static String b()
  {
    return j;
  }
  
  public static String b(Context paramContext)
  {
    if ((a == null) || (a.equals(""))) {}
    try
    {
      a = getPackageManagergetApplicationInfogetPackageName128metaData.getString("com.amap.api.v2.apikey");
      return a;
    }
    catch (Throwable paramContext)
    {
      for (;;)
      {
        Log.e("AuthLocation", "key鉴权失败");
      }
    }
  }
  
  public static String c(Context paramContext)
  {
    String str = "";
    for (;;)
    {
      try
      {
        TelephonyManager localTelephonyManager = (TelephonyManager)paramContext.getSystemService("phone");
        paramContext = str;
        if (localTelephonyManager != null) {}
        try
        {
          paramContext = localTelephonyManager.getNetworkOperator();
          if ((paramContext != null) && (paramContext.length() >= 3))
          {
            paramContext = paramContext.substring(0, 3);
            return paramContext;
          }
        }
        catch (Throwable paramContext)
        {
          paramContext.printStackTrace();
          return "";
        }
        paramContext = "";
      }
      catch (Throwable paramContext)
      {
        paramContext.printStackTrace();
        return "";
      }
    }
  }
  
  private static void c(String paramString)
  {
    if (paramString != null) {
      for (;;)
      {
        try
        {
          if (paramString.length() == 0) {
            return;
          }
          if ((b == null) || (!b.containsKey(paramString))) {
            break;
          }
          String str = (String)b.get(paramString);
          if ((str != null) && (str.length() > 0))
          {
            paramString = e.b(str, paramString);
            if ((paramString == null) || (paramString.length() <= 0) || (!paramString.contains("http:"))) {
              break;
            }
            e = paramString;
            return;
          }
        }
        catch (Throwable paramString)
        {
          paramString.printStackTrace();
          return;
        }
        paramString = null;
      }
    }
  }
  
  public static String d()
  {
    return Build.VERSION.RELEASE;
  }
  
  public static String d(Context paramContext)
  {
    int i1 = 0;
    try
    {
      paramContext = getPackageManagergetPackageInfogetPackageName64signatures[0].toByteArray();
      paramContext = MessageDigest.getInstance("SHA1").digest(paramContext);
      StringBuffer localStringBuffer = new StringBuffer();
      while (i1 < paramContext.length)
      {
        String str = Integer.toHexString(paramContext[i1] & 0xFF).toUpperCase(Locale.US);
        if (str.length() == 1) {
          localStringBuffer.append("0");
        }
        localStringBuffer.append(str);
        localStringBuffer.append(":");
        i1 += 1;
      }
      paramContext = localStringBuffer.toString();
      return paramContext;
    }
    catch (PackageManager.NameNotFoundException paramContext)
    {
      paramContext.printStackTrace();
      return null;
    }
    catch (NoSuchAlgorithmException paramContext)
    {
      for (;;)
      {
        paramContext.printStackTrace();
      }
    }
  }
  
  public static String e()
  {
    return Build.MODEL;
  }
  
  public static String g()
  {
    try
    {
      Object localObject = g.getPackageManager();
      localObject = (String)((PackageManager)localObject).getApplicationLabel(((PackageManager)localObject).getApplicationInfo(g.getPackageName(), 0));
      return (String)localObject;
    }
    catch (PackageManager.NameNotFoundException localNameNotFoundException)
    {
      localNameNotFoundException.printStackTrace();
    }
    return "";
  }
  
  public static String h()
  {
    Object localObject = g.getPackageManager();
    try
    {
      localObject = getPackageInfoggetPackageName0versionName;
      return (String)localObject;
    }
    catch (PackageManager.NameNotFoundException localNameNotFoundException)
    {
      localNameNotFoundException.printStackTrace();
    }
    return "";
  }
  
  public static String j()
  {
    return e;
  }
  
  private static String k()
  {
    Object localObject = new DisplayMetrics();
    ((WindowManager)g.getSystemService("window")).getDefaultDisplay().getMetrics((DisplayMetrics)localObject);
    int i1 = widthPixels;
    int i2 = heightPixels;
    if (i2 > i1) {}
    for (localObject = i1 + "*" + i2;; localObject = i2 + "*" + i1)
    {
      l = (String)localObject;
      return l;
    }
  }
  
  private static void l()
  {
    try
    {
      if (b == null) {
        b = new HashMap();
      }
      b.clear();
      b.put("a9a9d23668a1a7ea93de9b21d67e436a", "0151A2608A672882D5CF273660580953A9D5A7F787F6E0DE4AFAF5C4950A3957D8765EF79F885FFFDC4DC17DB726827514A96E4D8EE1B621F3188265766F41D7");
      b.put("fe643c382e5c3b3962141f1a2e815a78", "F1721D9E2EC066558986B60084D0A9124FA354CD62DFA34F4B4512D920CF5615529C1DFB4E1757CADCEEA1CC4504F37F");
      b.put("b2e8bd171989cb2c3c13bd89b4c1067a", "E9FD1623CA093DE6FC8EF95553A10FD156A2992AFE89A29927491E24ACE42759650D6EF3A8F46CA4BD2761B775B48DB0");
      b.put("9a571aa113ad987d626c0457828962e6", "6970E5DA79F86F5D12FF4DC281C662029F6782B9D29E1EF5913F43B71CCE0D05B7ADE26E37C8A0D7DA070B078046CCFDA813DFEE6A4A611548B1F531E569238A");
      b.put("668319f11506def6208d6afe320dfd52", "EA36C39255025E5DB4FBD8257739C71641729A816259783B63AAA127EC6282E7D3DD0FA9A765C48EE43D5D885CC9CDFF");
      b.put("256b0f26bb2a9506be6cfdb84028ae08", "8A72631ECA335440D5349C39B2C8C26F04E53AF03DA9FF9B1F9A99AC018EB3E4B692A3B3E7C9FAA158B9C743F11C0277");
      return;
    }
    catch (Throwable localThrowable)
    {
      localThrowable.printStackTrace();
    }
  }
  
  /* Error */
  public String a(String paramString)
  {
    // Byte code:
    //   0: ldc_w 356
    //   3: invokestatic 361	javax/crypto/KeyGenerator:getInstance	(Ljava/lang/String;)Ljavax/crypto/KeyGenerator;
    //   6: astore_2
    //   7: aload_2
    //   8: ifnonnull +16 -> 24
    //   11: ldc 44
    //   13: areturn
    //   14: astore_2
    //   15: aload_2
    //   16: invokevirtual 275	java/security/NoSuchAlgorithmException:printStackTrace	()V
    //   19: aconst_null
    //   20: astore_2
    //   21: goto -14 -> 7
    //   24: aload_2
    //   25: sipush 256
    //   28: invokevirtual 365	javax/crypto/KeyGenerator:init	(I)V
    //   31: aload_2
    //   32: invokevirtual 369	javax/crypto/KeyGenerator:generateKey	()Ljavax/crypto/SecretKey;
    //   35: invokeinterface 374 1 0
    //   40: astore_3
    //   41: aload_3
    //   42: getstatic 42	com/amap/api/location/core/c:g	Landroid/content/Context;
    //   45: invokestatic 377	com/amap/api/location/core/e:a	(Landroid/content/Context;)Ljava/security/PublicKey;
    //   48: invokestatic 380	com/amap/api/location/core/e:a	([BLjava/security/Key;)[B
    //   51: astore_2
    //   52: aload_3
    //   53: aload_0
    //   54: aload_1
    //   55: invokevirtual 382	com/amap/api/location/core/c:b	(Ljava/lang/String;)Ljava/lang/String;
    //   58: ldc_w 384
    //   61: invokevirtual 388	java/lang/String:getBytes	(Ljava/lang/String;)[B
    //   64: invokestatic 391	com/amap/api/location/core/e:a	([B[B)[B
    //   67: astore_3
    //   68: aload_2
    //   69: arraylength
    //   70: aload_3
    //   71: arraylength
    //   72: iadd
    //   73: newarray <illegal type>
    //   75: astore_1
    //   76: aload_2
    //   77: iconst_0
    //   78: aload_1
    //   79: iconst_0
    //   80: aload_2
    //   81: arraylength
    //   82: invokestatic 397	java/lang/System:arraycopy	(Ljava/lang/Object;ILjava/lang/Object;II)V
    //   85: aload_3
    //   86: iconst_0
    //   87: aload_1
    //   88: aload_2
    //   89: arraylength
    //   90: aload_3
    //   91: arraylength
    //   92: invokestatic 397	java/lang/System:arraycopy	(Ljava/lang/Object;ILjava/lang/Object;II)V
    //   95: aload_1
    //   96: invokestatic 399	ahz:a	([B)[B
    //   99: invokestatic 404	com/amap/api/location/core/b:a	([B)Ljava/lang/String;
    //   102: areturn
    //   103: astore_1
    //   104: aconst_null
    //   105: astore_1
    //   106: goto -11 -> 95
    //   109: astore_2
    //   110: goto -15 -> 95
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	113	0	this	c
    //   0	113	1	paramString	String
    //   6	2	2	localKeyGenerator	javax.crypto.KeyGenerator
    //   14	2	2	localNoSuchAlgorithmException	NoSuchAlgorithmException
    //   20	69	2	arrayOfByte1	byte[]
    //   109	1	2	localThrowable	Throwable
    //   40	51	3	arrayOfByte2	byte[]
    // Exception table:
    //   from	to	target	type
    //   0	7	14	java/security/NoSuchAlgorithmException
    //   41	76	103	java/lang/Throwable
    //   76	95	109	java/lang/Throwable
  }
  
  public String b(String paramString)
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("ia=1&");
    if ((a != null) && (a.length() > 0))
    {
      localStringBuilder.append("key=");
      localStringBuilder.append(a);
      localStringBuilder.append("&");
    }
    localStringBuilder.append("ct=android");
    String str1 = h.getDeviceId();
    String str2 = h.getSubscriberId();
    localStringBuilder.append("&ime=");
    localStringBuilder.append(str1);
    localStringBuilder.append("&sim=");
    localStringBuilder.append(str2);
    localStringBuilder.append("&pkg=");
    localStringBuilder.append(j);
    localStringBuilder.append("&mod=");
    localStringBuilder.append(e());
    localStringBuilder.append("&sv=");
    localStringBuilder.append(d());
    localStringBuilder.append("&nt=");
    localStringBuilder.append(f());
    str1 = h.getNetworkOperatorName();
    localStringBuilder.append("&np=");
    localStringBuilder.append(str1);
    localStringBuilder.append("&ctm=");
    localStringBuilder.append(System.currentTimeMillis());
    localStringBuilder.append("&re=");
    localStringBuilder.append(l);
    localStringBuilder.append("&av=");
    localStringBuilder.append("V1.3.3");
    localStringBuilder.append("&apn=");
    localStringBuilder.append(m);
    localStringBuilder.append("&apv=");
    localStringBuilder.append(n);
    localStringBuilder.append("&pro=");
    localStringBuilder.append(paramString);
    return localStringBuilder.toString();
  }
  
  public String c()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("mod=");
    localStringBuilder.append(e());
    localStringBuilder.append("&sv=");
    localStringBuilder.append(d());
    localStringBuilder.append("&nt=");
    localStringBuilder.append(f());
    String str = h.getNetworkOperatorName();
    localStringBuilder.append("&np=");
    localStringBuilder.append(str);
    return localStringBuilder.toString();
  }
  
  public String f()
  {
    if (g.checkCallingOrSelfPermission("android.permission.ACCESS_NETWORK_STATE") != 0) {
      return "";
    }
    if (i == null) {
      return "";
    }
    NetworkInfo localNetworkInfo = i.getActiveNetworkInfo();
    if (localNetworkInfo == null) {
      return "";
    }
    return localNetworkInfo.getTypeName();
  }
  
  public String i()
  {
    StringBuffer localStringBuffer = new StringBuffer();
    localStringBuffer.append(k).append(j);
    return localStringBuffer.toString();
  }
}

/* Location:
 * Qualified Name:     com.amap.api.location.core.c
 * Java Class Version: 6 (50.0)
 * JD-Core Version:    0.7.1
 */